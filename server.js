const express = require('express');
const app = express();
const port = process.env.PORT || 3000
const cors = require('cors');
const { GoogleSpreadsheet } = require('google-spreadsheet');
const timeToRefresh = 1000*60*10; // 1000ms * 60 * 10 = 10m
const doc = new GoogleSpreadsheet('1y1mnXcOjh5JT4N3AiHlTwktndeG5sDcAl6gLaPrbJJg');
let cached = {};

(async function(){
	await doc.useServiceAccountAuth({
		// env var values are copied from service account credentials generated by google
		// see "Authentication" section in docs for more info
		client_email: "admin-972@pizzeria-neapolitana.iam.gserviceaccount.com",
		private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDk+sjZ6O7YXjak\nW3nz2QIw4Al+X2TBzavnhN79v9jXwI21MYQDT/Cdh6omPmmp9qhkORGTBmsydZwL\nWEn+SRY3d2AN6JPxu6xdVPJ8HrU2F5xp0FtFpib4af5RKlYais1fbI0LxMTkNNcz\nb4gshA9vSzWHpucHpJfXTqc27AGcoYLkQcoWA3awrRUnxeNZVKxRnpdV75x25Bgr\nhc00V21Coa7uWy4pVSIy5TZuxExyBJfstCg7h+Tsy61rmBVB4hpe9irSfhO5em9K\n6lfz/9xBs1zsyNsgVZ8Rqdg9t4mQQoLH0nCoDPGksGA49tJA/p5U4DUVRJzbxi8/\ntbi8jiQ3AgMBAAECggEAErboft7fKTHyDKwpTc5uXmjr0wygOIgYb7CtZQHZYDDY\nTsyAOfZo97G511cB3dFPYU7vanEmMRaUWAexlyXeufkjZvTw+oXYiDxEIUmFN/7l\nWsSbtm07rCaa5tlV9joNSlTzO4NWhZbyq70xh6niH7opjYUM8X6jUQaYULsompDK\nhLmGU6MaVmgKy4e5VTsNeC1Arsvv9KzjTQf2uO6ceUKEMcrGZfVMmzH9POxGAeFr\nVr+69TqiLY8+Yhsm9+eHY7X1PG9C/He2AErGSm3v+dokHK/x6uoLQ/U2AwsvQszl\nE3TndsZsC6sx90yXu1Q3RPdk1IZKxBo/ZYqVDb6UiQKBgQD0wwVt7Uac+FmG2a8J\nlQ72OgyLk5O2cASDOcycBF/3M1P6mkVZ7Q188bSLHrcg8tCJHBZHYAC8oQBQzsy2\n1KeyGhrHG4E388USt3aF43OHE1G3gjLBxAgjx2QXSWjIuqZPFQOjI780LBld4YQ4\nPz7cjtr6xh406GM3waKPaRerHQKBgQDvfkGtuDntpEREpKq/Vr39sTmmXr4on0up\nLkwneWjvs45AkqYgKS1Ak7vK3GG4e0OMbNXwTAGqYb5VK/mpYXaIrX450AowVScC\nTyJBnyuQBogbJBJZpmq5DkCgE22Q1Yn7ggbyz7ZCDAXD2fIxoPP3kJZGqOrC5kpY\nUSpgctlYYwKBgQCHkARP0B1OD1c2kxaZTg+NXLVaERC8+Onm7Hpg5yNnvOwEXrGO\njvbrfsuqSgbPnuzVI9NLEOcXkmykVQWZNcrzn/W41YkKPl+mcCqbGVEBPTgDVX9b\nRoHjnynWo/f/RTGbl13+W2wpL0uVbbRXmt/sNMsgHd7ZGuTpGrw4hdJwGQKBgBMJ\n/Hqs/J3xwyOZ26Eeajgy0JxzR7a/AyrN7Wvt8POtWI+1mNNRsrFBjVpRLsuVsQcG\n1/Mkd7Vt0829kzlt8BhpgnFiIo05F8LNO7Hvz2zBuCxAL91Ep5NSmLyhDsLG1xNR\ngO/op1qUzhiFyQU9AGgb7HZtk0wvNpXSzgWg27p1AoGBAIlsE0stgJp6/PKNWE6J\njL/bnVhyL5USPpkOjENeBrh74tOcoKNszQL81Ood7C5trVjNbnAP+XaHYOvwWMKh\nJaYYNZLicLOXJLfGd6R62OruxJR0Il6rZwo/m9alShbyB/Qy+OQ+4fJJDzzTXxEG\nfSdgpni1mS2wmSy7V9uESb+u\n-----END PRIVATE KEY-----\n"
	});
	
	await doc.loadInfo();
})();

async function getRows(){
	const sheet = doc.sheetsByTitle['Товари'];
	let rows = await sheet.getRows();
	let goods = [];
	rows.forEach(row => {
		goods.push({
			id: row.ID,
			name: row['Назва'],
			categories: row['Категорії'].split(', '),
			size: row['Розмір'],
			description: row['Опис'],
			price: row['Ціна'],
			photo: row['Фото']
		});
	})
	cached = {
		data: goods,
		timestamp: Date.now()
	};
	return goods;
}

async function setRow(item){
	try{
		let dateSheetName = `${new Date().getMonth()+1}.${new Date().getFullYear()}`;
		let sheet = doc.sheetsByTitle[dateSheetName];
		if(!sheet){
			sheet = await doc.addSheet({ title: dateSheetName, headerValues: ["Замовлення", "ID", "Адреса", "Дата оформлення замовлення", "Телефон", "Коментарі", "Ціна"] });
		}
		let cartString = "",
			price = 0;
		item.cart.forEach(el => {
			price += +el.amount * +el.price;
			cartString += `${el.amount} одиниць товару '${el.name}', `;
		});
		cartString = cartString.slice(0,-2);
		let rows = await sheet.getRows();
		await sheet.addRow({
			"ID": rows.length,
			"Адреса": item.address,
			"Дата оформлення замовлення": new Date().toLocaleDateString(),
			"Телефон": item.phone,
			"Коментарі": item.comments,
			"Замовлення": cartString,
			"Ціна": price
		});
	}
	catch(err){
		console.log(err);
		return JSON.stringify(err);
	}
	return JSON.stringify('ok');
}

app.use(cors());
app.use(express.static('public'));
app.use('/assets', express.static('assets'));
app.use(express.json());

app.get('/getGoods', async (req, res) => {
	if(Date.now() - cached.timestamp <= timeToRefresh){
		res.send(cached.data);
	}
	else{
		let result = await getRows();
		res.send(result);
	}
});
app.post('/addOrder', async (req, res) => {
	let body = req.body;
	let result = await setRow(body);
	res.send(result);
});

app.listen(port, () => {
    console.log(`Pizza Neapolitana is at http://localhost:${port}`)
})